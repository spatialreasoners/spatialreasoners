[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spatialreasoners"
version = "0.1.5"
description = "SpatialReasoners: A framework for training Spatial Reasoning Models in any domain"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    { name = "Bart Pogodzinski", email = "bpogodzi@mpi-inf.mpg.de" },
    { name = "Christopher Wewer", email = "cwewer@mpi-inf.mpg.de" },
    { name = "Jan Eric Lenssen", email = "jlenssen@mpi-inf.mpg.de" },
    { name = "Bernt Schiele", email = "schiele@mpi-inf.mpg.de" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["machine learning", "deep learning", "spatial reasoning", "pytorch", "pytorch lightning", "diffusion models", "Spatial Reasoners", "SRM"]

dependencies = [
    # Core ML framework
    "torch>=1.13.0",
    "pytorch-lightning>=2.0.0",
    "torchvision>=0.14.0",
    "torchaudio>=0.13.0",
    
    # Configuration and data handling
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "dacite>=1.8.0",
    "numpy>=1.21.0",
    
    # Essential utilities used throughout codebase
    "einops>=0.6.0",
    "jaxtyping>=0.2.20",
    "beartype>=0.15.0",
    
    # Image and visualization
    "pillow>=8.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    
    # Experiment tracking and logging
    "wandb>=0.13.0",
    "tensorboard>=2.10.0",
    
    # Media processing
    "av>=10.0.0",
    
    # Advanced ML tools
    "accelerate>=0.20.0",
    "diffusers>=0.21.0",
    "timm>=0.9.0",
    "scipy>=1.9.0",
    "pandas>=1.5.0",
    "rotary-embedding-torch>=0.2.0",
    "roma>=1.3.0",
    
    # Utilities
    "tqdm>=4.64.0",
    "colorama>=0.4.0",
    "gdown>=4.7.0",
    "colorspacious>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-beartype>=0.2.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
all = ["spatialreasoners[dev,docs]"]

[project.urls]
Homepage = "https://github.com/spatialreasoners/spatialreasoners"
Documentation = "https://spatialreasoners.github.io/"
Repository = "https://github.com/spatialreasoners/spatialreasoners"
Issues = "https://github.com/spatialreasoners/spatialreasoners/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["spatialreasoners*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "torchaudio.*",
    "pytorch_lightning.*",
    "hydra.*",
    "omegaconf.*",
    "wandb.*",
    "PIL.*",
    "einops.*",
    "beartype.*",
    "jaxtyping.*",
    "colorama.*",
    "av.*",
    "accelerate.*",
    "diffusers.*",
    "timm.*",
    "roma.*",
    "rotary_embedding_torch.*",
    "gdown.*",
    "colorspacious.*",
    "scipy.*",
    "pandas.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
] 